
# Use parameters if you want them to influence the general variables
parameters:
- name: resourceGroupNameBase
  type: string

- name: baseName
  type: string

- name: environmentSuffix
  type: string

variables:

- name: location
  value: westus

# Inject additional secrets that are external and not created during the arm deployment process
# Do not hardcode real secrets into the yaml, you can use varaibles[] configured from the portal
- name: additionalKeyVaultSecrets
  value: >-
    {
      "items": [
        {"name": "AAD--ClientSecret", "secret": "SecretFromVariableGroupOrPipelineVariables" },
        {"name": "Sample--InjectedSecret", "secret": "sample-value" }
      ]
    }

# Configure here, in a group, or portal variables
- name: azureSubscriptionServiceConnectionName
  value: $[variables['azureSubscriptionServiceConnectionNameFromAdoPipelineSettings']]

# Use the resource group name base supplied if triggered manually,
# otherwise fallback to configuration from portal variables.
# '' is not a valid option on the parameters so 'useDefault' will
# signal to use the value from configuration
- name: resourceGroupNameFromParameterOrSettings
  ${{ if eq(parameters.resourceGroupNameBase, 'useDefault') }}:
    value: $[variables['resourceGroupNameBaseFromAdoPipelineSettings']]
  ${{ if ne(parameters.resourceGroupNameBase, 'useDefault') }}:
    value: ${{ parameters.resourceGroupNameBase }}

- name: resourceGroupName
  value: $(resourceGroupNameFromParameterOrSettings)-$(location)-${{ parameters.environmentSuffix }}

- name: syntheticBaseName
  value: $(resourceGroupName)

- name: syntheticBaseNameWithoutEnvironmentSuffix
  value: $(resourceGroupNameFromParameterOrSettings)-$(location)

- name: baseName
  value: >-
    $[coalesce(
      '${{ parameters.baseName }}',
      variables['syntheticBaseName'])]

- name: armTemplateNameParameter
  value: $(baseName)

- name: environmentName
  value: >-
    $[format('{0}-{1}',
      coalesce('${{ parameters.baseName }}', variables['syntheticBaseNameWithoutEnvironmentSuffix']),
      '${{ parameters.environmentSuffix }}')]
